name: CI

on:
  push:
    branches: [ main ]

concurrency:
  group: package-ui
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      
      - name: Install dependencies
        run: npm ci
      
      - name: Package UI
        run: gulp bundle
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ui-bundle
          path: build/ui-bundle.zip
          retention-days: 1
      
      - name: Push bundle
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add build/ui-bundle.zip
          git commit -am "Automated bundle"
          git push
      
      # This step dispatches an event to run the CD workflow of plenty-developers-docs
      - name: Rebuild developers site
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.PUBLIC_PAT_CICD4_PUBLIC }}
          repository: plentymarkets/plenty-developers-docs
          event-type: UIBundleUpdate
          client-payload: '{ "repository": "${{github.repository}}" }'
      
      # This step dispatches an event to run the CD workflow of plenty-manual-docs
      - name: Rebuild knowledge site
        uses: peter-evans/repository-dispatch@ce5485de42c9b2622d2ed064be479e8ed65e76f4
        with:
          token: ${{ secrets.PUBLIC_PAT_CICD4_PUBLIC }}
          repository: plentymarkets/plenty-manual-docs
          event-type: UIBundleUpdate
          client-payload: '{ "repository": "${{github.repository}}" }'
          
  notification: 
    name: Google chat notification
    needs: build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Google Chat Notification Failure
        if: ${{ needs.build.result == 'failure' }}
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: UI Build
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_FAILURE }}
          status: ${{ needs.build.result }}
